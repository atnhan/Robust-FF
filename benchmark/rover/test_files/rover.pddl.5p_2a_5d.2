(define (domain Rover)
(:requirements :typing)
(:types rover waypoint store camera mode lander objective)

(:predicates (at ?x - rover ?y - waypoint) 
             (at_lander ?x - lander ?y - waypoint)
             (can_traverse ?r - rover ?x - waypoint ?y - waypoint)
	     (equipped_for_soil_analysis ?r - rover)
             (equipped_for_rock_analysis ?r - rover)
             (equipped_for_imaging ?r - rover)
             (empty ?s - store)
             (have_rock_analysis ?r - rover ?w - waypoint)
             (have_soil_analysis ?r - rover ?w - waypoint)
             (full ?s - store)
	     (calibrated ?c - camera ?r - rover) 
	     (supports ?c - camera ?m - mode)
             (available ?r - rover)
             (visible ?w - waypoint ?p - waypoint)
             (have_image ?r - rover ?o - objective ?m - mode)
             (communicated_soil_data ?w - waypoint)
             (communicated_rock_data ?w - waypoint)
             (communicated_image_data ?o - objective ?m - mode)
	     (at_soil_sample ?w - waypoint)
	     (at_rock_sample ?w - waypoint)
             (visible_from ?o - objective ?w - waypoint)
	     (store_of ?s - store ?r - rover)
	     (calibration_target ?i - camera ?o - objective)
	     (on_board ?i - camera ?r - rover)
	     (channel_free ?l - lander)

)

	
(:action navigate
:parameters (?x - rover ?y - waypoint ?z - waypoint) 
:precondition
	(and
		(at ?x ?y)
		(visible ?y ?z)
		(available ?x)
		(can_traverse ?x ?y ?z)
	)
:poss-precondition
	(and
	)
:effect
	(and
		(at ?x ?z)
		(not (at ?x ?y))
	)
:poss-effect
	(and
	)
)

(:action sample_soil
:parameters (?x - rover ?s - store ?p - waypoint)
:precondition
	(and
		(equipped_for_soil_analysis ?x)
		(at ?x ?p)
		(at_soil_sample ?p)
		(store_of ?s ?x)
		(empty ?s)
	)
:poss-precondition
	(and
	)
:effect
	(and
		(full ?s)
		(have_soil_analysis ?x ?p)
		(not (empty ?s))
		(not (at_soil_sample ?p))
	)
:poss-effect
	(and
		(not (store_of ?s ?x))
	)
)

(:action sample_rock
:parameters (?x - rover ?s - store ?p - waypoint)
:precondition
	(and
		(empty ?s)
		(equipped_for_rock_analysis ?x)
		(at ?x ?p)
		(at_rock_sample ?p)
		(store_of ?s ?x)
	)
:poss-precondition
	(and
	)
:effect
	(and
		(full ?s)
		(have_rock_analysis ?x ?p)
		(not (empty ?s))
		(not (at_rock_sample ?p))
	)
:poss-effect
	(and
		(not (store_of ?s ?x))
	)
)

(:action drop
:parameters (?x - rover ?y - store)
:precondition
	(and
		(full ?y)
		(store_of ?y ?x)
	)
:poss-precondition
	(and
	)
:effect
	(and
		(empty ?y)
		(not (full ?y))
	)
:poss-effect
	(and
	)
)

(:action calibrate
 :parameters (?r - rover ?i - camera ?t - objective ?w - waypoint)
 
:precondition
	(and
		(calibration_target ?i ?t)
		(at ?r ?w)
		(visible_from ?t ?w)
		(equipped_for_imaging ?r)
	)
:poss-precondition
	(and
		(on_board ?i ?r)
	)
:effect
	(and
		(calibrated ?i ?r)
	)
:poss-effect
	(and
	)
)

(:action take_image
 :parameters (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
 
:precondition
	(and
		(supports ?i ?m)
		(on_board ?i ?r)
		(at ?r ?p)
		(calibrated ?i ?r)
		(visible_from ?o ?p)
	)
:poss-precondition
	(and
		(equipped_for_imaging ?r)
	)
:effect
	(and
		(have_image ?r ?o ?m)
	)
:poss-effect
	(and
		(not (calibrated ?i ?r))
	)
)

(:action communicate_soil_data
 :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
 
:precondition
	(and
		(channel_free ?l)
		(available ?r)
		(at ?r ?x)
		(have_soil_analysis ?r ?p)
		(visible ?x ?y)
	)
:poss-precondition
	(and
		(channel_free ?l)
		(at_lander ?l ?y)
	)
:effect
	(and
		(channel_free ?l)
		(communicated_soil_data ?p)
		(available ?r)
		(not (channel_free ?l))
		(not (available ?r))
	)
:poss-effect
	(and
		(not (at_lander ?l ?y))
	)
)

(:action communicate_rock_data
 :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
 
:precondition
	(and
		(channel_free ?l)
		(at_lander ?l ?y)
		(visible ?x ?y)
		(at ?r ?x)
		(available ?r)
	)
:poss-precondition
	(and
		(have_rock_analysis ?r ?p)
	)
:effect
	(and
		(communicated_rock_data ?p)
		(not (available ?r))
		(not (channel_free ?l))
	)
:poss-effect
	(and
		(channel_free ?l)
		(available ?r)
	)
)

(:action communicate_image_data
 :parameters (?r - rover ?l - lander ?o - objective ?m - mode ?x - waypoint ?y - waypoint)
 
:precondition
	(and
		(at_lander ?l ?y)
		(visible ?x ?y)
		(available ?r)
		(have_image ?r ?o ?m)
		(channel_free ?l)
		(at ?r ?x)
	)
:poss-precondition
	(and
	)
:effect
	(and
		(channel_free ?l)
		(available ?r)
		(communicated_image_data ?o ?m)
		(not (available ?r))
	)
:poss-effect
	(and
		(not (channel_free ?l))
	)
)

)