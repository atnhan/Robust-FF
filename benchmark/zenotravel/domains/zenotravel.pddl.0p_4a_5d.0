(define (domain zeno-travel)
(:requirements :typing)
(:types aircraft person city flevel - object)
(:predicates (at ?x - (either person aircraft) ?c - city)
             (in ?p - person ?a - aircraft)
	     (fuel-level ?a - aircraft ?l - flevel)
	     (next ?l1 ?l2 - flevel))


(:action board
 :parameters (?p - person ?a - aircraft ?c - city)
 
 
:precondition
	(and
		(at ?a ?c)
		(at ?p ?c)
	)
:poss-precondition
	(and
	)
:effect
	(and
		(not (at ?p ?c))
	)
:poss-effect
	(and
		(in ?p ?a)
		(not (at ?a ?c))
	)
)

(:action debark
 :parameters (?p - person ?a - aircraft ?c - city)

 
:precondition
	(and
		(at ?a ?c)
		(in ?p ?a)
	)
:poss-precondition
	(and
	)
:effect
	(and
		(at ?p ?c)
	)
:poss-effect
	(and
		(not (in ?p ?a))
	)
)

(:action fly 
 :parameters (?a - aircraft ?c1 ?c2 - city ?l1 ?l2 - flevel)
 
 
:precondition
	(and
		(at ?a ?c1)
		(fuel-level ?a ?l1)
		(next ?l2 ?l1)
	)
:poss-precondition
	(and
	)
:effect
	(and
	)
:poss-effect
	(and
		(fuel-level ?a ?l2)
		(at ?a ?c2)
		(not (fuel-level ?a ?l1))
		(not (at ?a ?c1))
	)
)

(:action zoom
 :parameters (?a - aircraft ?c1 ?c2 - city ?l1 ?l2 ?l3 - flevel)

 
:precondition
	(and
		(at ?a ?c1)
		(next ?l3 ?l2)
		(next ?l2 ?l1)
		(fuel-level ?a ?l1)
	)
:poss-precondition
	(and
	)
:effect
	(and
		(at ?a ?c2)
		(not (fuel-level ?a ?l1))
		(not (at ?a ?c1))
	)
:poss-effect
	(and
		(fuel-level ?a ?l3)
	)
)

(:action refuel
 :parameters (?a - aircraft ?c - city ?l - flevel ?l1 - flevel)

 
:precondition
	(and
		(at ?a ?c)
		(next ?l ?l1)
		(fuel-level ?a ?l)
	)
:poss-precondition
	(and
	)
:effect
	(and
		(fuel-level ?a ?l1)
	)
:poss-effect
	(and
		(not (fuel-level ?a ?l))
	)
)

)