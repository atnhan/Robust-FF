Terminals which are not used

   SITUATION_TOK
   BSITUATION_TOK


State 76 conflicts: 1 shift/reduce


Grammar

    0 $accept: file $end

    1 file: /* empty */
    2     | problem_definition file

    3 @1: /* empty */

    4 problem_definition: OPEN_PAREN DEFINE_TOK @1 problem_name problem_defs CLOSE_PAREN

    5 problem_name: OPEN_PAREN PROBLEM_TOK NAME CLOSE_PAREN

    6 base_domain_name: OPEN_PAREN BDOMAIN_TOK NAME CLOSE_PAREN

    7 problem_defs: /* empty */
    8             | objects_def problem_defs
    9             | init_def problem_defs
   10             | goal_def problem_defs
   11             | base_domain_name problem_defs

   12 objects_def: OPEN_PAREN OBJECTS_TOK typed_list_name CLOSE_PAREN

   13 @2: /* empty */

   14 init_def: OPEN_PAREN INIT_TOK @2 literal_name_plus CLOSE_PAREN

   15 @3: /* empty */

   16 goal_def: OPEN_PAREN GOAL_TOK @3 adl_goal_description CLOSE_PAREN

   17 adl_goal_description: literal_term
   18                     | OPEN_PAREN AND_TOK adl_goal_description_star CLOSE_PAREN
   19                     | OPEN_PAREN OR_TOK adl_goal_description_star CLOSE_PAREN
   20                     | OPEN_PAREN NOT_TOK adl_goal_description CLOSE_PAREN
   21                     | OPEN_PAREN IMPLY_TOK adl_goal_description adl_goal_description CLOSE_PAREN
   22                     | OPEN_PAREN EXISTS_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN
   23                     | OPEN_PAREN FORALL_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN

   24 adl_goal_description_star: /* empty */
   25                          | adl_goal_description adl_goal_description_star

   26 literal_term: OPEN_PAREN NOT_TOK atomic_formula_term CLOSE_PAREN
   27             | atomic_formula_term

   28 atomic_formula_term: OPEN_PAREN predicate term_star CLOSE_PAREN
   29                    | OPEN_PAREN EQ_TOK term_star CLOSE_PAREN

   30 term_star: /* empty */
   31          | term term_star

   32 term: NAME
   33     | VARIABLE

   34 name_plus: NAME
   35          | NAME name_plus

   36 typed_list_name: /* empty */
   37                | NAME EITHER_TOK name_plus CLOSE_PAREN typed_list_name
   38                | NAME TYPE typed_list_name
   39                | NAME typed_list_name

   40 typed_list_variable: /* empty */
   41                    | VARIABLE EITHER_TOK name_plus CLOSE_PAREN typed_list_variable
   42                    | VARIABLE TYPE typed_list_variable
   43                    | VARIABLE typed_list_variable

   44 predicate: NAME

   45 literal_name_plus: literal_name
   46                  | literal_name literal_name_plus

   47 literal_name: OPEN_PAREN NOT_TOK atomic_formula_name CLOSE_PAREN
   48             | atomic_formula_name

   49 atomic_formula_name: OPEN_PAREN predicate name_star CLOSE_PAREN

   50 name_star: /* empty */
   51          | NAME name_star


Terminals, with rules where they appear

$end (0) 0
error (256)
DEFINE_TOK (258) 4
PROBLEM_TOK (259) 5
SITUATION_TOK (260)
BSITUATION_TOK (261)
OBJECTS_TOK (262) 12
BDOMAIN_TOK (263) 6
INIT_TOK (264) 14
GOAL_TOK (265) 16
EQ_TOK (266) 29
AND_TOK (267) 18
NOT_TOK (268) 20 26 47
NAME (269) 5 6 32 34 35 37 38 39 44 51
VARIABLE (270) 33 41 42 43
TYPE (271) 38 42
FORALL_TOK (272) 23
IMPLY_TOK (273) 21
OR_TOK (274) 19
EXISTS_TOK (275) 22
EITHER_TOK (276) 37 41
OPEN_PAREN (277) 4 5 6 12 14 16 18 19 20 21 22 23 26 28 29 47 49
CLOSE_PAREN (278) 4 5 6 12 14 16 18 19 20 21 22 23 26 28 29 37 41 47
    49


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
file (25)
    on left: 1 2, on right: 0 2
problem_definition (26)
    on left: 4, on right: 2
@1 (27)
    on left: 3, on right: 4
problem_name (28)
    on left: 5, on right: 4
base_domain_name (29)
    on left: 6, on right: 11
problem_defs (30)
    on left: 7 8 9 10 11, on right: 4 8 9 10 11
objects_def (31)
    on left: 12, on right: 8
init_def (32)
    on left: 14, on right: 9
@2 (33)
    on left: 13, on right: 14
goal_def (34)
    on left: 16, on right: 10
@3 (35)
    on left: 15, on right: 16
adl_goal_description (36)
    on left: 17 18 19 20 21 22 23, on right: 16 20 21 22 23 25
adl_goal_description_star (37)
    on left: 24 25, on right: 18 19 25
literal_term (38)
    on left: 26 27, on right: 17
atomic_formula_term (39)
    on left: 28 29, on right: 26 27
term_star (40)
    on left: 30 31, on right: 28 29 31
term (41)
    on left: 32 33, on right: 31
name_plus (42)
    on left: 34 35, on right: 35 37 41
typed_list_name (43)
    on left: 36 37 38 39, on right: 12 37 38 39
typed_list_variable (44)
    on left: 40 41 42 43, on right: 22 23 41 42 43
predicate (45)
    on left: 44, on right: 28 49
literal_name_plus (46)
    on left: 45 46, on right: 14 46
literal_name (47)
    on left: 47 48, on right: 45 46
atomic_formula_name (48)
    on left: 49, on right: 47 48
name_star (49)
    on left: 50 51, on right: 49 51


state 0

    0 $accept: . file $end

    OPEN_PAREN  shift, and go to state 1

    $default  reduce using rule 1 (file)

    file                go to state 2
    problem_definition  go to state 3


state 1

    4 problem_definition: OPEN_PAREN . DEFINE_TOK @1 problem_name problem_defs CLOSE_PAREN

    DEFINE_TOK  shift, and go to state 4


state 2

    0 $accept: file . $end

    $end  shift, and go to state 5


state 3

    2 file: problem_definition . file

    OPEN_PAREN  shift, and go to state 1

    $default  reduce using rule 1 (file)

    file                go to state 6
    problem_definition  go to state 3


state 4

    4 problem_definition: OPEN_PAREN DEFINE_TOK . @1 problem_name problem_defs CLOSE_PAREN

    $default  reduce using rule 3 (@1)

    @1  go to state 7


state 5

    0 $accept: file $end .

    $default  accept


state 6

    2 file: problem_definition file .

    $default  reduce using rule 2 (file)


state 7

    4 problem_definition: OPEN_PAREN DEFINE_TOK @1 . problem_name problem_defs CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 8

    problem_name  go to state 9


state 8

    5 problem_name: OPEN_PAREN . PROBLEM_TOK NAME CLOSE_PAREN

    PROBLEM_TOK  shift, and go to state 10


state 9

    4 problem_definition: OPEN_PAREN DEFINE_TOK @1 problem_name . problem_defs CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 11

    $default  reduce using rule 7 (problem_defs)

    base_domain_name  go to state 12
    problem_defs      go to state 13
    objects_def       go to state 14
    init_def          go to state 15
    goal_def          go to state 16


state 10

    5 problem_name: OPEN_PAREN PROBLEM_TOK . NAME CLOSE_PAREN

    NAME  shift, and go to state 17


state 11

    6 base_domain_name: OPEN_PAREN . BDOMAIN_TOK NAME CLOSE_PAREN
   12 objects_def: OPEN_PAREN . OBJECTS_TOK typed_list_name CLOSE_PAREN
   14 init_def: OPEN_PAREN . INIT_TOK @2 literal_name_plus CLOSE_PAREN
   16 goal_def: OPEN_PAREN . GOAL_TOK @3 adl_goal_description CLOSE_PAREN

    OBJECTS_TOK  shift, and go to state 18
    BDOMAIN_TOK  shift, and go to state 19
    INIT_TOK     shift, and go to state 20
    GOAL_TOK     shift, and go to state 21


state 12

   11 problem_defs: base_domain_name . problem_defs

    OPEN_PAREN  shift, and go to state 11

    $default  reduce using rule 7 (problem_defs)

    base_domain_name  go to state 12
    problem_defs      go to state 22
    objects_def       go to state 14
    init_def          go to state 15
    goal_def          go to state 16


state 13

    4 problem_definition: OPEN_PAREN DEFINE_TOK @1 problem_name problem_defs . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 23


state 14

    8 problem_defs: objects_def . problem_defs

    OPEN_PAREN  shift, and go to state 11

    $default  reduce using rule 7 (problem_defs)

    base_domain_name  go to state 12
    problem_defs      go to state 24
    objects_def       go to state 14
    init_def          go to state 15
    goal_def          go to state 16


state 15

    9 problem_defs: init_def . problem_defs

    OPEN_PAREN  shift, and go to state 11

    $default  reduce using rule 7 (problem_defs)

    base_domain_name  go to state 12
    problem_defs      go to state 25
    objects_def       go to state 14
    init_def          go to state 15
    goal_def          go to state 16


state 16

   10 problem_defs: goal_def . problem_defs

    OPEN_PAREN  shift, and go to state 11

    $default  reduce using rule 7 (problem_defs)

    base_domain_name  go to state 12
    problem_defs      go to state 26
    objects_def       go to state 14
    init_def          go to state 15
    goal_def          go to state 16


state 17

    5 problem_name: OPEN_PAREN PROBLEM_TOK NAME . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 27


state 18

   12 objects_def: OPEN_PAREN OBJECTS_TOK . typed_list_name CLOSE_PAREN

    NAME  shift, and go to state 28

    $default  reduce using rule 36 (typed_list_name)

    typed_list_name  go to state 29


state 19

    6 base_domain_name: OPEN_PAREN BDOMAIN_TOK . NAME CLOSE_PAREN

    NAME  shift, and go to state 30


state 20

   14 init_def: OPEN_PAREN INIT_TOK . @2 literal_name_plus CLOSE_PAREN

    $default  reduce using rule 13 (@2)

    @2  go to state 31


state 21

   16 goal_def: OPEN_PAREN GOAL_TOK . @3 adl_goal_description CLOSE_PAREN

    $default  reduce using rule 15 (@3)

    @3  go to state 32


state 22

   11 problem_defs: base_domain_name problem_defs .

    $default  reduce using rule 11 (problem_defs)


state 23

    4 problem_definition: OPEN_PAREN DEFINE_TOK @1 problem_name problem_defs CLOSE_PAREN .

    $default  reduce using rule 4 (problem_definition)


state 24

    8 problem_defs: objects_def problem_defs .

    $default  reduce using rule 8 (problem_defs)


state 25

    9 problem_defs: init_def problem_defs .

    $default  reduce using rule 9 (problem_defs)


state 26

   10 problem_defs: goal_def problem_defs .

    $default  reduce using rule 10 (problem_defs)


state 27

    5 problem_name: OPEN_PAREN PROBLEM_TOK NAME CLOSE_PAREN .

    $default  reduce using rule 5 (problem_name)


state 28

   37 typed_list_name: NAME . EITHER_TOK name_plus CLOSE_PAREN typed_list_name
   38                | NAME . TYPE typed_list_name
   39                | NAME . typed_list_name

    NAME        shift, and go to state 28
    TYPE        shift, and go to state 33
    EITHER_TOK  shift, and go to state 34

    $default  reduce using rule 36 (typed_list_name)

    typed_list_name  go to state 35


state 29

   12 objects_def: OPEN_PAREN OBJECTS_TOK typed_list_name . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 36


state 30

    6 base_domain_name: OPEN_PAREN BDOMAIN_TOK NAME . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 37


state 31

   14 init_def: OPEN_PAREN INIT_TOK @2 . literal_name_plus CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 38

    literal_name_plus    go to state 39
    literal_name         go to state 40
    atomic_formula_name  go to state 41


state 32

   16 goal_def: OPEN_PAREN GOAL_TOK @3 . adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 42

    adl_goal_description  go to state 43
    literal_term          go to state 44
    atomic_formula_term   go to state 45


state 33

   38 typed_list_name: NAME TYPE . typed_list_name

    NAME  shift, and go to state 28

    $default  reduce using rule 36 (typed_list_name)

    typed_list_name  go to state 46


state 34

   37 typed_list_name: NAME EITHER_TOK . name_plus CLOSE_PAREN typed_list_name

    NAME  shift, and go to state 47

    name_plus  go to state 48


state 35

   39 typed_list_name: NAME typed_list_name .

    $default  reduce using rule 39 (typed_list_name)


state 36

   12 objects_def: OPEN_PAREN OBJECTS_TOK typed_list_name CLOSE_PAREN .

    $default  reduce using rule 12 (objects_def)


state 37

    6 base_domain_name: OPEN_PAREN BDOMAIN_TOK NAME CLOSE_PAREN .

    $default  reduce using rule 6 (base_domain_name)


state 38

   47 literal_name: OPEN_PAREN . NOT_TOK atomic_formula_name CLOSE_PAREN
   49 atomic_formula_name: OPEN_PAREN . predicate name_star CLOSE_PAREN

    NOT_TOK  shift, and go to state 49
    NAME     shift, and go to state 50

    predicate  go to state 51


state 39

   14 init_def: OPEN_PAREN INIT_TOK @2 literal_name_plus . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 52


state 40

   45 literal_name_plus: literal_name .
   46                  | literal_name . literal_name_plus

    OPEN_PAREN  shift, and go to state 38

    $default  reduce using rule 45 (literal_name_plus)

    literal_name_plus    go to state 53
    literal_name         go to state 40
    atomic_formula_name  go to state 41


state 41

   48 literal_name: atomic_formula_name .

    $default  reduce using rule 48 (literal_name)


state 42

   18 adl_goal_description: OPEN_PAREN . AND_TOK adl_goal_description_star CLOSE_PAREN
   19                     | OPEN_PAREN . OR_TOK adl_goal_description_star CLOSE_PAREN
   20                     | OPEN_PAREN . NOT_TOK adl_goal_description CLOSE_PAREN
   21                     | OPEN_PAREN . IMPLY_TOK adl_goal_description adl_goal_description CLOSE_PAREN
   22                     | OPEN_PAREN . EXISTS_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN
   23                     | OPEN_PAREN . FORALL_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN
   26 literal_term: OPEN_PAREN . NOT_TOK atomic_formula_term CLOSE_PAREN
   28 atomic_formula_term: OPEN_PAREN . predicate term_star CLOSE_PAREN
   29                    | OPEN_PAREN . EQ_TOK term_star CLOSE_PAREN

    EQ_TOK      shift, and go to state 54
    AND_TOK     shift, and go to state 55
    NOT_TOK     shift, and go to state 56
    NAME        shift, and go to state 50
    FORALL_TOK  shift, and go to state 57
    IMPLY_TOK   shift, and go to state 58
    OR_TOK      shift, and go to state 59
    EXISTS_TOK  shift, and go to state 60

    predicate  go to state 61


state 43

   16 goal_def: OPEN_PAREN GOAL_TOK @3 adl_goal_description . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 62


state 44

   17 adl_goal_description: literal_term .

    $default  reduce using rule 17 (adl_goal_description)


state 45

   27 literal_term: atomic_formula_term .

    $default  reduce using rule 27 (literal_term)


state 46

   38 typed_list_name: NAME TYPE typed_list_name .

    $default  reduce using rule 38 (typed_list_name)


state 47

   34 name_plus: NAME .
   35          | NAME . name_plus

    NAME  shift, and go to state 47

    $default  reduce using rule 34 (name_plus)

    name_plus  go to state 63


state 48

   37 typed_list_name: NAME EITHER_TOK name_plus . CLOSE_PAREN typed_list_name

    CLOSE_PAREN  shift, and go to state 64


state 49

   47 literal_name: OPEN_PAREN NOT_TOK . atomic_formula_name CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 65

    atomic_formula_name  go to state 66


state 50

   44 predicate: NAME .

    $default  reduce using rule 44 (predicate)


state 51

   49 atomic_formula_name: OPEN_PAREN predicate . name_star CLOSE_PAREN

    NAME  shift, and go to state 67

    $default  reduce using rule 50 (name_star)

    name_star  go to state 68


state 52

   14 init_def: OPEN_PAREN INIT_TOK @2 literal_name_plus CLOSE_PAREN .

    $default  reduce using rule 14 (init_def)


state 53

   46 literal_name_plus: literal_name literal_name_plus .

    $default  reduce using rule 46 (literal_name_plus)


state 54

   29 atomic_formula_term: OPEN_PAREN EQ_TOK . term_star CLOSE_PAREN

    NAME      shift, and go to state 69
    VARIABLE  shift, and go to state 70

    $default  reduce using rule 30 (term_star)

    term_star  go to state 71
    term       go to state 72


state 55

   18 adl_goal_description: OPEN_PAREN AND_TOK . adl_goal_description_star CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 42

    $default  reduce using rule 24 (adl_goal_description_star)

    adl_goal_description       go to state 73
    adl_goal_description_star  go to state 74
    literal_term               go to state 44
    atomic_formula_term        go to state 45


state 56

   20 adl_goal_description: OPEN_PAREN NOT_TOK . adl_goal_description CLOSE_PAREN
   26 literal_term: OPEN_PAREN NOT_TOK . atomic_formula_term CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 42

    adl_goal_description  go to state 75
    literal_term          go to state 44
    atomic_formula_term   go to state 76


state 57

   23 adl_goal_description: OPEN_PAREN FORALL_TOK . OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 77


state 58

   21 adl_goal_description: OPEN_PAREN IMPLY_TOK . adl_goal_description adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 42

    adl_goal_description  go to state 78
    literal_term          go to state 44
    atomic_formula_term   go to state 45


state 59

   19 adl_goal_description: OPEN_PAREN OR_TOK . adl_goal_description_star CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 42

    $default  reduce using rule 24 (adl_goal_description_star)

    adl_goal_description       go to state 73
    adl_goal_description_star  go to state 79
    literal_term               go to state 44
    atomic_formula_term        go to state 45


state 60

   22 adl_goal_description: OPEN_PAREN EXISTS_TOK . OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 80


state 61

   28 atomic_formula_term: OPEN_PAREN predicate . term_star CLOSE_PAREN

    NAME      shift, and go to state 69
    VARIABLE  shift, and go to state 70

    $default  reduce using rule 30 (term_star)

    term_star  go to state 81
    term       go to state 72


state 62

   16 goal_def: OPEN_PAREN GOAL_TOK @3 adl_goal_description CLOSE_PAREN .

    $default  reduce using rule 16 (goal_def)


state 63

   35 name_plus: NAME name_plus .

    $default  reduce using rule 35 (name_plus)


state 64

   37 typed_list_name: NAME EITHER_TOK name_plus CLOSE_PAREN . typed_list_name

    NAME  shift, and go to state 28

    $default  reduce using rule 36 (typed_list_name)

    typed_list_name  go to state 82


state 65

   49 atomic_formula_name: OPEN_PAREN . predicate name_star CLOSE_PAREN

    NAME  shift, and go to state 50

    predicate  go to state 51


state 66

   47 literal_name: OPEN_PAREN NOT_TOK atomic_formula_name . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 83


state 67

   51 name_star: NAME . name_star

    NAME  shift, and go to state 67

    $default  reduce using rule 50 (name_star)

    name_star  go to state 84


state 68

   49 atomic_formula_name: OPEN_PAREN predicate name_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 85


state 69

   32 term: NAME .

    $default  reduce using rule 32 (term)


state 70

   33 term: VARIABLE .

    $default  reduce using rule 33 (term)


state 71

   29 atomic_formula_term: OPEN_PAREN EQ_TOK term_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 86


state 72

   31 term_star: term . term_star

    NAME      shift, and go to state 69
    VARIABLE  shift, and go to state 70

    $default  reduce using rule 30 (term_star)

    term_star  go to state 87
    term       go to state 72


state 73

   25 adl_goal_description_star: adl_goal_description . adl_goal_description_star

    OPEN_PAREN  shift, and go to state 42

    $default  reduce using rule 24 (adl_goal_description_star)

    adl_goal_description       go to state 73
    adl_goal_description_star  go to state 88
    literal_term               go to state 44
    atomic_formula_term        go to state 45


state 74

   18 adl_goal_description: OPEN_PAREN AND_TOK adl_goal_description_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 89


state 75

   20 adl_goal_description: OPEN_PAREN NOT_TOK adl_goal_description . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 90


state 76

   26 literal_term: OPEN_PAREN NOT_TOK atomic_formula_term . CLOSE_PAREN
   27             | atomic_formula_term .

    CLOSE_PAREN  shift, and go to state 91

    CLOSE_PAREN  [reduce using rule 27 (literal_term)]


state 77

   23 adl_goal_description: OPEN_PAREN FORALL_TOK OPEN_PAREN . typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN

    VARIABLE  shift, and go to state 92

    $default  reduce using rule 40 (typed_list_variable)

    typed_list_variable  go to state 93


state 78

   21 adl_goal_description: OPEN_PAREN IMPLY_TOK adl_goal_description . adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 42

    adl_goal_description  go to state 94
    literal_term          go to state 44
    atomic_formula_term   go to state 45


state 79

   19 adl_goal_description: OPEN_PAREN OR_TOK adl_goal_description_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 95


state 80

   22 adl_goal_description: OPEN_PAREN EXISTS_TOK OPEN_PAREN . typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN

    VARIABLE  shift, and go to state 92

    $default  reduce using rule 40 (typed_list_variable)

    typed_list_variable  go to state 96


state 81

   28 atomic_formula_term: OPEN_PAREN predicate term_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 97


state 82

   37 typed_list_name: NAME EITHER_TOK name_plus CLOSE_PAREN typed_list_name .

    $default  reduce using rule 37 (typed_list_name)


state 83

   47 literal_name: OPEN_PAREN NOT_TOK atomic_formula_name CLOSE_PAREN .

    $default  reduce using rule 47 (literal_name)


state 84

   51 name_star: NAME name_star .

    $default  reduce using rule 51 (name_star)


state 85

   49 atomic_formula_name: OPEN_PAREN predicate name_star CLOSE_PAREN .

    $default  reduce using rule 49 (atomic_formula_name)


state 86

   29 atomic_formula_term: OPEN_PAREN EQ_TOK term_star CLOSE_PAREN .

    $default  reduce using rule 29 (atomic_formula_term)


state 87

   31 term_star: term term_star .

    $default  reduce using rule 31 (term_star)


state 88

   25 adl_goal_description_star: adl_goal_description adl_goal_description_star .

    $default  reduce using rule 25 (adl_goal_description_star)


state 89

   18 adl_goal_description: OPEN_PAREN AND_TOK adl_goal_description_star CLOSE_PAREN .

    $default  reduce using rule 18 (adl_goal_description)


state 90

   20 adl_goal_description: OPEN_PAREN NOT_TOK adl_goal_description CLOSE_PAREN .

    $default  reduce using rule 20 (adl_goal_description)


state 91

   26 literal_term: OPEN_PAREN NOT_TOK atomic_formula_term CLOSE_PAREN .

    $default  reduce using rule 26 (literal_term)


state 92

   41 typed_list_variable: VARIABLE . EITHER_TOK name_plus CLOSE_PAREN typed_list_variable
   42                    | VARIABLE . TYPE typed_list_variable
   43                    | VARIABLE . typed_list_variable

    VARIABLE    shift, and go to state 92
    TYPE        shift, and go to state 98
    EITHER_TOK  shift, and go to state 99

    $default  reduce using rule 40 (typed_list_variable)

    typed_list_variable  go to state 100


state 93

   23 adl_goal_description: OPEN_PAREN FORALL_TOK OPEN_PAREN typed_list_variable . CLOSE_PAREN adl_goal_description CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 101


state 94

   21 adl_goal_description: OPEN_PAREN IMPLY_TOK adl_goal_description adl_goal_description . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 102


state 95

   19 adl_goal_description: OPEN_PAREN OR_TOK adl_goal_description_star CLOSE_PAREN .

    $default  reduce using rule 19 (adl_goal_description)


state 96

   22 adl_goal_description: OPEN_PAREN EXISTS_TOK OPEN_PAREN typed_list_variable . CLOSE_PAREN adl_goal_description CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 103


state 97

   28 atomic_formula_term: OPEN_PAREN predicate term_star CLOSE_PAREN .

    $default  reduce using rule 28 (atomic_formula_term)


state 98

   42 typed_list_variable: VARIABLE TYPE . typed_list_variable

    VARIABLE  shift, and go to state 92

    $default  reduce using rule 40 (typed_list_variable)

    typed_list_variable  go to state 104


state 99

   41 typed_list_variable: VARIABLE EITHER_TOK . name_plus CLOSE_PAREN typed_list_variable

    NAME  shift, and go to state 47

    name_plus  go to state 105


state 100

   43 typed_list_variable: VARIABLE typed_list_variable .

    $default  reduce using rule 43 (typed_list_variable)


state 101

   23 adl_goal_description: OPEN_PAREN FORALL_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN . adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 42

    adl_goal_description  go to state 106
    literal_term          go to state 44
    atomic_formula_term   go to state 45


state 102

   21 adl_goal_description: OPEN_PAREN IMPLY_TOK adl_goal_description adl_goal_description CLOSE_PAREN .

    $default  reduce using rule 21 (adl_goal_description)


state 103

   22 adl_goal_description: OPEN_PAREN EXISTS_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN . adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 42

    adl_goal_description  go to state 107
    literal_term          go to state 44
    atomic_formula_term   go to state 45


state 104

   42 typed_list_variable: VARIABLE TYPE typed_list_variable .

    $default  reduce using rule 42 (typed_list_variable)


state 105

   41 typed_list_variable: VARIABLE EITHER_TOK name_plus . CLOSE_PAREN typed_list_variable

    CLOSE_PAREN  shift, and go to state 108


state 106

   23 adl_goal_description: OPEN_PAREN FORALL_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 109


state 107

   22 adl_goal_description: OPEN_PAREN EXISTS_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 110


state 108

   41 typed_list_variable: VARIABLE EITHER_TOK name_plus CLOSE_PAREN . typed_list_variable

    VARIABLE  shift, and go to state 92

    $default  reduce using rule 40 (typed_list_variable)

    typed_list_variable  go to state 111


state 109

   23 adl_goal_description: OPEN_PAREN FORALL_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN .

    $default  reduce using rule 23 (adl_goal_description)


state 110

   22 adl_goal_description: OPEN_PAREN EXISTS_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN .

    $default  reduce using rule 22 (adl_goal_description)


state 111

   41 typed_list_variable: VARIABLE EITHER_TOK name_plus CLOSE_PAREN typed_list_variable .

    $default  reduce using rule 41 (typed_list_variable)
